package ruina.powers;

import com.megacrit.cardcrawl.cards.DamageInfo;
import com.megacrit.cardcrawl.core.AbstractCreature;
import com.megacrit.cardcrawl.core.CardCrawlGame;
import com.megacrit.cardcrawl.localization.PowerStrings;
import ruina.RuinaMod;
import ruina.monsters.day49.act5.Act5Angela1;

import java.text.DecimalFormat;

public class PierceVulnerability extends AbstractUnremovablePower {
    public static final String POWER_ID = RuinaMod.makeID(PierceVulnerability.class.getSimpleName());
    private static final PowerStrings powerStrings = CardCrawlGame.languagePack.getPowerStrings(POWER_ID);
    public static final String NAME = powerStrings.NAME;
    public static final String[] DESCRIPTIONS = powerStrings.DESCRIPTIONS;
    private Act5Angela1 comparison;
    private float baseIncrease = 0.25F;

    public PierceVulnerability(AbstractCreature owner, int amount, Act5Angela1 enemy) {
        super(NAME, POWER_ID, PowerType.BUFF, false, owner, amount);
        loadRegion("combust");
        comparison = enemy;
    }

    @Override
    public void updateDescription() {
        description = String.format(DESCRIPTIONS[0], amount, 1);
    }

    @Override
    public float atDamageReceive(float damage, DamageInfo.DamageType type) {
        if (type == DamageInfo.DamageType.NORMAL && comparison.hasPower(RighteousHammer.POWER_ID)) {
            int a = (amount % 25);
            float b = (((float) a) * baseIncrease);
            if(b < 1f){
                return damage / b;
            }
            else {
                return damage * b;
            }
        } else {
            return damage;
        }
    }

}